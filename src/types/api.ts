// Fallback type definitions (OpenAPI generation failed)
// Do not edit this file manually

export interface StudyLog {
  id: number;
  date: string;
  subject: string;
  topics: string[];
  studyTime: number;
  understanding: number;
  memo?: string;
  efficiency?: number;
}

export interface StudyWeek {
  id: number;
  weekNumber: number;
  title: string;
  phase: string;
  goals: string[];
  days: StudyDay[];
  progressPercentage: number;
  totalStudyTime: number;
  averageUnderstanding: number;
}

export interface StudyDay {
  id: number;
  day: string;
  subject: string;
  topics: string[];
  estimatedTime: number;
  actualTime: number;
  completed: boolean;
  understanding: number;
  memo?: string;
}

export interface QuizSession {
  id: number;
  userId?: number;
  sessionType: 'category' | 'random' | 'review' | 'weak_points';
  category?: string;
  totalQuestions: number;
  correctAnswers: number;
  totalTime: number;
  avgTimePerQ: number;
  score: number;
  startedAt: string;
  completedAt?: string;
  isCompleted: boolean;
}

export interface Question {
  id: string;
  year: number;
  season: string;
  section: string;
  number: number;
  category: string;
  subcategory?: string;
  difficulty: number;
  question: string;
  choices: string[];
  tags?: string[];
}

export interface MorningTest {
  id?: number;
  date: string;
  category: string;
  totalQuestions: number;
  correctAnswers: number;
  accuracy?: number;
  timeSpent: number;
  memo?: string;
}

export interface AfternoonTest {
  id?: number;
  date: string;
  category: string;
  score: number;
  timeSpent: number;
  memo?: string;
}

// Additional utility types
export type ApiResponse<T> = {
  success: true;
  data: T;
} | {
  success: false;
  error: string;
};

// Request types
export type CreateStudyLogRequest = Omit<StudyLog, 'id' | 'efficiency'>;
export type StartQuizSessionRequest = {
  sessionType: 'category' | 'random' | 'review' | 'weak_points';
  questionCount: number;
  category?: string;
};
export type SubmitAnswerRequest = {
  sessionId: number;
  questionId: string;
  userAnswer: string;
  timeSpent?: number;
};
export type CreateMorningTestRequest = Omit<MorningTest, 'id' | 'accuracy'>;
export type CreateAfternoonTestRequest = Omit<AfternoonTest, 'id'>;

// 重複除去済み - 上記で定義済み

export interface StudySession {
  startTime: string;
  duration: number;
  subject?: string;
  sessionType: 'focus' | 'review' | 'quiz' | 'break';
  intensity: 'low' | 'medium' | 'high';
}

export interface TimeRange {
  startTime: string;
  endTime: string;
}

export interface StudyPlanProgress {
  planId: number;
  totalDays: number;
  completedDays: number;
  totalHours: number;
  completedHours: number;
  averageScore: number;
  streakDays: number;
  lastStudyDate?: string;
  upcomingMilestones: StudyMilestone[];
}

export interface StudyMilestone {
  id: number;
  title: string;
  targetDate: string;
  isCompleted: boolean;
  completedDate?: string;
  description?: string;
}

export interface StudyRecommendation {
  id: number;
  userId: number;
  type: 'topic_focus' | 'time_adjustment' | 'difficulty_change' | 'review_schedule';
  title: string;
  description: string;
  priority: 'low' | 'medium' | 'high';
  actionable: boolean;
  estimatedImpact: string;
  createdAt: string;
}

export interface StudyPlanTemplate {
  id: number;
  name: string;
  description: string;
  defaultPeriodDays: number;
  defaultWeeklyHours: number;
  targetAudience: string;
  difficulty: 'beginner' | 'intermediate' | 'advanced';
  features: string[];
  isPopular: boolean;
}

export interface StudyPlanPreferences {
  planId: number;
  reminderEnabled: boolean;
  reminderTime?: string;
  weekendStudy: boolean;
  intensiveMode: boolean;
  adaptiveDifficulty: boolean;
  notificationPreferences: {
    email: boolean;
    push: boolean;
    daily: boolean;
    weekly: boolean;
  };
}

export interface UpdateStudyPlanRequest {
  title?: string;
  description?: string;
  studyPeriodDays?: number;
  weeklyStudyHours?: number;
  dailyStudyHours?: number;
  learningStyle?: 'visual' | 'auditory' | 'kinesthetic' | 'reading';
  difficultyPreference?: 'easy' | 'medium' | 'hard' | 'mixed';
  isActive?: boolean;
}

export interface CreateStudyPlanFromTemplateRequest {
  templateId: number;
  customization?: {
    title?: string;
    studyPeriodDays?: number;
    weeklyStudyHours?: number;
    dailyStudyHours?: number;
    learningStyle?: 'visual' | 'auditory' | 'kinesthetic' | 'reading';
    difficultyPreference?: 'easy' | 'medium' | 'hard' | 'mixed';
  };
}

export interface UpdateStudyPlanPreferencesRequest {
  reminderEnabled?: boolean;
  reminderTime?: string;
  weekendStudy?: boolean;
  intensiveMode?: boolean;
  adaptiveDifficulty?: boolean;
  notificationPreferences?: {
    email?: boolean;
    push?: boolean;
    daily?: boolean;
    weekly?: boolean;
  };
}

export interface StudyScheduleTemplate {
  id: number;
  name: string;
  description: string;
  weeklyPattern: WeeklyStudyPattern;
  targetDifficulty: 'beginner' | 'intermediate' | 'advanced';
  estimatedHoursPerWeek: number;
  isFlexible: boolean;
}
